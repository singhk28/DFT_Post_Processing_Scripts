# This script will read the .ener file generated by cp2k for NEB
# and produce the energy diagram for the data (in eV)
# The script is written in Python 3.7 


print("==========" * 5)
print("This script will read the .ener file generated by cp2k \nfor NEB and produce the energy diagram for the data")
print("\n")
print("This script is written by Kamalpreet Singh in Python V3")
print("==========" * 5)

##### Importing Modules #####
import glob
import pandas as pd
import matplotlib.pyplot as plt
import csv
import seaborn as sns
#############################


find_file_name_list = glob.glob('*.ener')                                     
file_name = str(find_file_name_list[0])                                       
                                                             

Energy_file = open (file_name, 'r+')                                          
Lines = Energy_file.readlines()                                               
Energy_file.close()                                                           
Last_line = Lines[-1]                                                         
Last_line_split = Last_line.split()                                            
del Last_line_split[0]                                                        
images = eval(input("How many NEB images do you have ? \n"))
Energies_Ha = Last_line_split[0:images]

Valley_Ha = eval(max(Energies_Ha))
Valley_ev = Valley_Ha*27.2114
Hill_Ha = eval(min(Energies_Ha))
Hill_ev = Hill_Ha *27.2114
Barrier_ev = Hill_ev - Valley_ev


image_list = []
for count in range (1,images+1):
    image_list.append(count)



df = pd.DataFrame(data=Energies_Ha, columns=['Energy (Ha)'], dtype=float)
df.insert(0,"Image #",image_list)
df['Energy (eV)'] = df['Energy (Ha)']*27.2114




print(df)
print("\nHighest Energy: ",  Hill_Ha, "eV", "|| Lowest Energy: " ,Valley_Ha, "eV")
print("\n")
print("The Barrier is: " , Barrier_ev ,"eV \n")


plott = input("Do you want an energy plot? (y/n) \n")

if plott == "y":
    sns.lineplot(x=df['Image #'], y=df['Energy (eV)'])
    plt.title("Energy Digram", fontsize = 20)
    plt.show()
    plott = "n"



file_export = input("Do you want to export the raw data? (y/n) \n")

if file_export == "y":
    df.to_csv("NEB.csv",  encoding='utf-8', index=False)
    file_export = "n"

print("Good bye")





